Implement a vector (growable array) in C.

typedef struct {
  int size;
  int max_size;
  int *data;
} Vector;

// Creates a vector of size initial_size.
Vector* create_vector(int initial_size);

// Returns the max size of the vector.
int size(Vector* vector);

// Returns the element in the i position.
int get(Vector* vector, int i);

// Saves x into the i position.
// Pre: i is a valid position in the array.
// Post: if mem cannot be reallocated, retuns false. Otherwise true.
bool set(Vector* vector, int i, int x);

If load factor of the vector is greater than 90%, then resize it to twice the size.

How do we use it?

int main() {
  Vector* myVector = create_vector(10);
  set(myVector, 0, 2);
  set(myVector, 1, 3);
  set(myVector, 2, 5);
  set(myVector, 3, 7);
  printf("Position %d contains %d", 3, get(myVector, 3));
}

Later on we're gonna add more primitives like append.

